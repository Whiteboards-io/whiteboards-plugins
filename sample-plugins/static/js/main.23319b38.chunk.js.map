{"version":3,"sources":["logo.svg","resize-container.tsx","hello-world/index.tsx","jira-integration/index.tsx","board-inspect/icon.svg","board-inspect/index.tsx","board-inspect/hooks.ts","board-inspect/json-editor.tsx","board-inspect/plugin-sidebar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ResizeContainer","children","containerRef","useRef","useEffect","containerEl","current","observer","ResizeObserver","entries","contentRect","width","height","pluginToHost","observe","unobserve","ref","PluginRoot","registerTemplate","id","title","description","illustration","window","location","origin","logo","configurationUrl","pathname","content","TemplateConfig","onClick","updateTemplateContent","cards","_index","card1","_items","x","y","text","sites","useAsync","getJiraSites","useState","siteId","undefined","jql","configState","setConfigState","assignState","stateUpdate","importZone","importIssues","jqlLayout","jqlLimit","loading","result","siteOptions","map","site","label","name","value","Select","find","option","options","onChange","projectId","isDisabled","event","target","registerSidebarTool","icon","tooltip","contentUrl","useWatchObjectData","objectId","watchFn","data","setData","useWatchIndexData","JsonEditor","editorRef","getValue","useCallback","useGetValue","editor","JSONEditor","onChangeJSON","json","_","isEqual","destroy","update","PluginSidebar","cardIds","watchCardsIndex","lineIds","watchLinesIndex","object","setObject","style","marginLeft","position","right","top","CardView","cardId","LineView","lineId","CardLink","LineLink","cardData","watchCardData","setCardData","lineData","watchLineData","setLineData","data-card-id","appearance","data-line-id","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23319b38.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useRef } from \"react\";\n\nimport { pluginToHost } from \"@whiteboards-io/plugins\";\n\nexport default function ResizeContainer({ children }: { children: React.ReactNode[] }) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const containerEl = containerRef.current;\n    if (containerEl) {\n      const observer = new ResizeObserver((entries) => {\n        const { width, height } = entries[0].contentRect;\n\n        pluginToHost(\"resizePluginFrame\", { width: width + \"px\", height: height + \"px\" });\n      });\n\n      observer.observe(containerEl);\n      return () => observer.unobserve(containerEl);\n    }\n  }, []);\n\n  return <div ref={containerRef}>{children}</div>;\n}\n","import React, { useEffect } from \"react\";\n\nimport { updateTemplateContent, registerTemplate } from \"@whiteboards-io/plugins\";\n\nimport logo from \"../logo.svg\";\nimport ResizeContainer from \"../resize-container\";\n\nexport function PluginRoot() {\n  useEffect(() => {\n    registerTemplate({\n      id: \"hello-world-template\",\n      title: \"Hello World\",\n      description: \"This is an example plugin with configuration screen\",\n      illustration: window.location.origin + logo,\n      configurationUrl: window.location.origin + window.location.pathname + \"template-config\",\n      content: {},\n    });\n  }, []);\n\n  return null;\n}\n\nexport function TemplateConfig() {\n  return (\n    <ResizeContainer>\n      <h3>Hello world!</h3>\n      <p>This is a very simple template.</p>\n      <button\n        onClick={() =>\n          updateTemplateContent({\n            cards: {\n              _index: {\n                card1: true,\n              },\n              _items: {\n                card1: {\n                  id: \"card1\",\n                  x: 0,\n                  y: 0,\n                  width: 100,\n                  height: 50,\n                  text: \"Hello World!\",\n                },\n              },\n            },\n          })\n        }\n      >\n        Click to continue\n      </button>\n    </ResizeContainer>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport { useAsync } from \"react-async-hook\";\n\nimport Select from \"@atlaskit/select\";\nimport Textfield from \"@atlaskit/textfield\";\n\nimport { updateTemplateContent, registerTemplate, getJiraSites } from \"@whiteboards-io/plugins\";\n\nimport logo from \"../logo.svg\";\nimport ResizeContainer from \"../resize-container\";\n\nexport function PluginRoot() {\n  useEffect(() => {\n    registerTemplate({\n      id: \"jira-integration-template\",\n      title: \"Jira integration\",\n      description: \"This is an example plugin with configuration screen that integrates with Jira\",\n      illustration: window.location.origin + logo,\n      configurationUrl: window.location.origin + window.location.pathname + \"template-config\",\n      content: {},\n    });\n  }, []);\n\n  return null;\n}\n\ninterface ConfigState {\n  siteId: string | undefined;\n  jql: string | undefined;\n}\n\nexport function TemplateConfig() {\n  const sites = useAsync(getJiraSites, []);\n\n  const [configState, setConfigState] = useState<ConfigState>({\n    siteId: undefined,\n    jql: \"ORDER BY lastViewed DESC\",\n  });\n\n  const assignState = (stateUpdate: Partial<ConfigState>) => setConfigState({ ...configState, ...stateUpdate });\n\n  useEffect(() => {\n    updateTemplateContent({\n      cards: {\n        _index: {\n          importZone: true,\n        },\n        _items: {\n          importZone: {\n            id: \"importZone\",\n\n            x: 0,\n            y: 0,\n            width: 300,\n            height: 300,\n\n            importIssues: true,\n            jql: configState.jql,\n            jqlLayout: \"random\",\n            jqlLimit: 25,\n            siteId: configState.siteId,\n          },\n        },\n      },\n    });\n  }, [configState]);\n\n  if (sites.loading) {\n    return <b>Loading...</b>;\n  }\n\n  if (!sites.result) {\n    return <b>Error! Unable to fetch Jira sites.</b>;\n  }\n\n  const siteOptions = sites.result.map((site) => ({ label: site.name, value: site.id }));\n  return (\n    <ResizeContainer>\n      <h3>Site</h3>\n      <Select\n        value={siteOptions.find((option) => option.value === configState.siteId)}\n        options={siteOptions}\n        // @ts-ignore\n        onChange={(option) => assignState({ siteId: option?.value, projectId: null })}\n      />\n      <h3>Issues</h3>\n      <Textfield\n        isDisabled={!configState.siteId}\n        value={configState.jql}\n        onChange={(event) => assignState({ jql: (event.target as HTMLInputElement).value })}\n      />\n    </ResizeContainer>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/icon.137941fd.svg\";","import { useEffect } from \"react\";\n\nimport { registerSidebarTool } from \"@whiteboards-io/plugins\";\n\nimport icon from \"./icon.svg\";\n\nexport default function PluginRoot() {\n  useEffect(() => {\n    registerSidebarTool({\n      id: \"board-inspect\",\n      icon: window.location.origin + icon,\n      tooltip: \"Board inspect\",\n      contentUrl: window.location.origin + window.location.pathname + \"sidebar\",\n    });\n  }, []);\n\n  return null;\n}\n","import { useEffect, useState, useRef, useCallback } from \"react\";\nimport {\n  CardData,\n  LineData,\n  watchCardData,\n  watchCardsIndex,\n  watchLineData,\n  watchLinesIndex,\n} from \"@whiteboards-io/plugins\";\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function useWatchObjectData<T = CardData | LineData>(\n  objectId: string,\n  watchFn: typeof watchCardData | typeof watchLineData\n) {\n  const [data, setData] = useState<CardData | LineData | null>(null);\n\n  useEffect(() => {\n    // @ts-ignore\n    return watchFn(objectId, (data) => setData(data));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return data;\n}\n\nexport function useWatchIndexData(watchFn: typeof watchCardsIndex | typeof watchLinesIndex) {\n  const [data, setData] = useState<string[]>();\n\n  useEffect(() => {\n    return watchFn((data) => setData(data));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return data;\n}\n\nexport function useGetValue<T>(value: T) {\n  const ref = useRef(value);\n  ref.current = value;\n  return useCallback(() => ref.current, []);\n}","import React, { useEffect, useRef } from \"react\";\nimport _ from \"underscore\";\nimport JSONEditor from \"jsoneditor\";\nimport \"jsoneditor/dist/jsoneditor.css\";\nimport {useGetValue} from \"./hooks\"\n\nexport default function JsonEditor({ value, onChange }: { value: any; onChange: (value: any) => void }) {\n  const ref = useRef<HTMLDivElement>(null);\n  const editorRef = useRef<JSONEditor | null>(null);\n  const getValue = useGetValue(value);\n\n  useEffect(() => {\n    if (ref.current) {\n      const editor = new JSONEditor(\n        ref.current,\n        {\n          onChangeJSON: (json) => {\n            if (!_.isEqual(json, getValue())) {\n              onChange(json);\n            }\n          },\n        },\n        value\n      );\n      editorRef.current = editor;\n      return () => editor.destroy();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    editorRef.current?.update(value);\n  }, [value]);\n\n  return <div ref={ref} />;\n}\n","import React, { useState } from \"react\";\nimport Button from \"@atlaskit/button\";\nimport {\n  setCardData,\n  setLineData,\n  watchCardData,\n  watchCardsIndex,\n  watchLineData,\n  watchLinesIndex,\n} from \"@whiteboards-io/plugins\";\nimport { useWatchIndexData, useWatchObjectData } from \"./hooks\";\nimport JsonEditor from \"./json-editor\";\n\nexport default function PluginSidebar() {\n  const cardIds = useWatchIndexData(watchCardsIndex);\n  const lineIds = useWatchIndexData(watchLinesIndex);\n\n  const [object, setObject] = useState<null | [\"card\", string] | [\"line\", string]>();\n\n  if (object) {\n    return (\n      <>\n        <h1 style={{ marginLeft: \"40px\" }}>Board inspect</h1>\n        <div style={{ position: \"absolute\", right: 0, top: 0 }}>\n          <Button onClick={() => setObject(null)}>Back</Button>\n        </div>\n        {object?.[0] === \"card\" ? (\n          <CardView cardId={object?.[1]} />\n        ) : object?.[0] === \"line\" ? (\n          <LineView lineId={object?.[1]} />\n        ) : null}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1 style={{ marginLeft: \"40px\" }}>Board inspect</h1>\n      {cardIds && (\n        <>\n          <h2>Cards</h2>\n          <ul>\n            {cardIds.map((cardId) => (\n              <CardLink key={cardId} cardId={cardId} onClick={() => setObject([\"card\", cardId])} />\n            ))}\n          </ul>\n        </>\n      )}\n      {lineIds && (\n        <>\n          <h2>Lines</h2>\n          <ul>\n            {lineIds.map((lineId) => (\n              <LineLink key={lineId} lineId={lineId} onClick={() => setObject([\"line\", lineId])} />\n            ))}\n          </ul>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction CardView({ cardId }: { cardId: string }) {\n  const cardData = useWatchObjectData(cardId, watchCardData);\n  return (\n    <>\n      <h2>Card: {cardId}</h2>\n      <JsonEditor value={cardData} onChange={(value) => setCardData(cardId, value)} />\n    </>\n  );\n}\n\nfunction LineView({ lineId }: { lineId: string }) {\n  const lineData = useWatchObjectData(lineId, watchLineData);\n  return (\n    <>\n      <h2>Line: {lineId}</h2>\n      <JsonEditor value={lineData} onChange={(value) => setLineData(lineId, value)} />\n    </>\n  );\n}\n\nfunction CardLink({ cardId, onClick }: { cardId: string; onClick: () => void }) {\n  return (\n    <li data-card-id={cardId}>\n      <Button appearance=\"link\" onClick={onClick}>\n        {cardId}\n      </Button>\n    </li>\n  );\n}\n\nfunction LineLink({ lineId, onClick }: { lineId: string; onClick: () => void }) {\n  return (\n    <li data-line-id={lineId}>\n      <Button appearance=\"link\" onClick={onClick}>\n        {lineId}\n      </Button>\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport * as HelloWorld from \"./hello-world\";\nimport * as JiraIntegration from \"./jira-integration\";\nimport BoardInspectPluginPage from \"./board-inspect\";\nimport BoardInspectPlugiSidebar from \"./board-inspect/plugin-sidebar\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        {/* Hello world */}\n        <Route path=\"/hello-world/template-config\">\n          <HelloWorld.TemplateConfig />\n        </Route>\n        <Route path=\"/hello-world/\">\n          <HelloWorld.PluginRoot />\n        </Route>\n        {/* Jira integration */}\n        <Route path=\"/jira-integration/template-config\">\n          <JiraIntegration.TemplateConfig />\n        </Route>\n        <Route path=\"/jira-integration/\">\n          <JiraIntegration.PluginRoot />\n        </Route>\n        {/* Board inspect */}\n        <Route path=\"/board-inspect/sidebar\">\n          <BoardInspectPlugiSidebar />\n        </Route>\n        <Route path=\"/board-inspect/\">\n          <BoardInspectPluginPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}